version: '3.1'

services:

  #bd:
  #  container_name: mysql
  #  image: mysql:5.7
  #  restart: always
  #  environment:
  #    MYSQL_DATABASE: "food"
  #    MYSQL_USER: "admin"
  #    MYSQL_PASSWORD: "password"
  #    MYSQL_ROOT_PASSWORD: "password"
  #  ports:
  #    - 3306:3306
  #  networks: 
  #    - SA
  #  volumes:
  #    - "./DataBase/db:/var/lib/mysql"

  frontend:
    container_name: frontend
    image: frontend
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    restart: always
    env_file:
       - 'variables.env'
      
    networks: 
      - SA
    ports:
      - 47000:4200

  usuario:
    container_name: usuario
    image: usuario
    build:
      context: ./Usuario
      dockerfile: Dockerfile
    restart: always
    networks: 
      - SA
    ports:
      - 47001:3000

  catalogoadd:
    container_name: catalogoadd
    image: catalogoadd
    build:
      context: ./AddBookServer
      dockerfile: Dockerfile
    restart: always
    networks: 
      - SA
    ports:
      - 47002:3000

  catalogodelete:
    container_name: catalogodelete
    image: catalogodelete
    build:
      context: ./DeleteBookServer
      dockerfile: Dockerfile
    restart: always
    networks: 
      - SA
    ports:
      - 47003:3430
  
  catalogoupdate:
    container_name: catalogoupdate
    image: catalogoupdate
    build:
      context: ./UpdateBookServer
      dockerfile: Dockerfile
    restart: always
    networks: 
      - SA
    ports:
      - 47004:3420

  catalogoget:
    container_name: catalogoget
    image: catalogoget
    build:
      context: ./GetBookServer
      dockerfile: Dockerfile
    restart: always
    networks: 
      - SA
    ports:
      - 47005:3410
  
  compras:
    container_name: compras
    image: compras
    build:
      context: ./Compras
      dockerfile: Dockerfile
    restart: always
    networks: 
      - SA
    ports:
      - 47006:3000
  
  eliminarsolicitudes:
    container_name: eliminarsolicitudes
    image: eliminarsolicitudes
    build:
      context: ./EliminarSolicitudes
      dockerfile: Dockerfile
    restart: always
    networks: 
      - SA
    ports:
      - 47007:3000

  obtenersolicitudes:
    container_name: obtenersolicitudes
    image: obtenersolicitudes
    build:
      context: ./ObtenerSolicitudes
      dockerfile: Dockerfile
    restart: always
    networks: 
      - SA
    ports:
      - 47008:3000 

  solicitarlibros:
    container_name: solicitarlibros
    image: solicitarlibros
    build:
      context: ./SolicitarLibros
      dockerfile: Dockerfile
    restart: always
    networks: 
      - SA
    ports:
      - 47009:3000 

  crearbitacora:
    container_name: crearbitacora
    image: crearbitacora
    build:
      context: ./CrearBitacora
      dockerfile: Dockerfile
    restart: always
    networks: 
      - SA
    ports:
      - 47010:3450

  obtenerbitacora:
    container_name: obtenerbitacora
    image: obtenerbitacora
    build:
      context: ./ObtenerBitacora
      dockerfile: Dockerfile
    restart: always
    networks: 
      - SA
    ports:
      - 47011:3460

networks: 
    SA:



  

